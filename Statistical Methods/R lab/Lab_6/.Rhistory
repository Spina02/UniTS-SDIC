fit2 <- lm(Internet ~ GDB, data = UN)
fit2 <- lm(Internet ~ GDB, data = UN)
fit2 <- lm(Internet ~ GDB, data = UN)
fit2 <- lm(Internet ~ GDP, data = UN)
fit2 <- lm(Internet ~ GDP, data = UN)
summary(fit2)
corr(fit1)
cor(fit1)
corr(fit1)
?corr
??corr
corrplot(fit1)
??corrplot
?corrplot
import corrplot
install package corrplot
install.packages('corrplot')
import corrplot
corrplot(fit1)
library(corrplot)
corrplot(fit1)
library(corrplot)
corrplot(fit2)
library(corrplot)
corrplot(fit1)
library(corrplot)
M = cor(fit1)
library(corrplot)
M = cor(fit1)
library(corrplot)
M = cor(UN)
library(corrplot)
M = cor(fit1)
library(corrplot)
M = cor(fit1)
fit1
UN
library(corrplot)
M = cor(UN)
library(corrplot)
M = cor(data(UN))
library(corrplot)
M = cor(UN[-1])
corrplot(M)
library(corrplot)
M = cor(UN[-1], use = "complete.obs")
corrplot(M)
library(corrplot)
M = cor(UN[-1])
corrplot(M)
library(corrplot)
M = cor(UN[-1], use = "complete.obs")
corrplot(M)
library(corrplot)
M = cor(UN[-1])
corrplot(M)
library(corrplot)
par(mfrow = c(1, 2))
M = cor(UN[-1], use = "complete.obs")
corrplot(M)
M = cor(UN[-1])
corrplot(M)
library(corrplot)
M = cor(UN[-1], use = "complete.obs", method = 'number')
library(corrplot)
M = cor(UN[-1], use = "complete.obs", method = 'color')
library(corrplot)
M = cor(UN[-1], method = 'color')
library(corrplot)
M = cor(UN[-1], use = "complete.obs", method = 'color')
library(corrplot)
M = cor(UN[-1], use = "complete.obs", method = 'number')
library(corrplot)
M = cor(UN[-1], use = "complete.obs", method = 'pearson')
corrplot(M)
library(corrplot)
M = cor(UN[-1], use = "complete.obs", method = 'number')
library(corrplot)
M = cor(UN[-1], use = "complete.obs", method = 'kendall')
corrplot(M)
library(corrplot)
M = cor(UN[-1], use = "complete.obs", method = 'number')
library(corrplot)
M = cor(UN[-1], use = "complete.obs", method = 'spearman')
corrplot(M)
library(corrplot)
M = cor(UN[-1], use = "complete.obs", method = 'number')
library(corrplot)
M = cor(UN[-1], use = "complete.obs", method = 'pearson')
corrplot(M)
library(corrplot)
M = cor(UN[-1], use = "complete.obs", method = 'spearman')
corrplot(M)
library(corrplot)
M = cor(UN[-1], use = "complete.obs", method = 'pearson')
corrplot(M)
library(corrplot)
M = cor(UN[-1], use = "complete.obs", method = 'spearman')
corrplot(M)
library(corrplot)
M = cor(UN[-1], use = "complete.obs", method = 'spearman')
corrplot(M)
library(corrplot)
M = cor(UN[-1], use = "complete.obs", method = 'pearson')
corrplot(M)
library(corrplot)
M = cor(UN[-1], use = "complete.obs", method = 'circle')
library(corrplot)
M = cor(UN[-1], method = 'circle')
library(corrplot)
M = cor(UN[-1], use = "complete.obs")
corrplot(M, method = 'number')
library(corrplot)
M = cor(UN[-1], use = "complete.obs")
corrplot(M, method = 'color')
library(corrplot)
M = cor(UN[-1], use = "complete.obs")
corrplot(M, method = 'color', order = 'AOE')
library(corrplot)
M = cor(UN[-1], use = "complete.obs")
corrplot(M, method = 'color', order = 'AOE', diag = False)
library(corrplot)
M = cor(UN[-1], use = "complete.obs")
corrplot(M, method = 'color', order = 'AOE', diag = FALSE)
library(corrplot)
M = cor(UN[-1], use = "complete.obs")
corrplot(M, method = 'color', order = 'AOE')
library(corrplot)
M = cor(UN[-1], use = "complete.obs")
corrplot(M, method = 'color', order = 'AOE', type = 'upper')
library(corrplot)
M = cor(UN[-1], use = "complete.obs")
corrplot(M, method = 'color', order = 'AOE')
library(corrplot)
M = cor(UN[-1], use = "complete.obs")
corrplot(M, method = 'square', order = 'AOE')
library(corrplot)
M = cor(UN[-1], use = "complete.obs")
corrplot(M, method = 'square', order = 'hclust')
library(corrplot)
M = cor(UN[-1], use = "complete.obs")
corrplot(M, method = 'square', order = 'AOE')
library(corrplot)
M = cor(UN[-1], use = "complete.obs")
corrplot(M, method = 'square', order = 'hclust')
library(corrplot)
M = cor(UN[-1], use = "complete.obs")
corrplot(M, method = 'square', order = 'AOE')
library(corrplot)
M = cor(UN[-1], use = "complete.obs")
corrplot(M, method = 'square', order = 'hclust', addrect = 2)
library(corrplot)
M = cor(UN[-1], use = "complete.obs")
corrplot(M, method = 'square')
library(corrplot)
M = cor(UN[-1], use = "complete.obs")
corrplot(M, method = 'number')
library(corrplot)
M = cor(UN[-1], use = "complete.obs")
corrplot(M, method = 'number')
library(corrplot)
M = cor(UN[-1], use = "complete.obs")
corrplot(M, method = 'number')
# Residual plots
par(mfrow = c(1, 2))
plot(fit2)
# Scatterplot + (estimated) regression line
par(mfrow = c(1, 1))
with(UN, plot(GDP, Internet, pch = 19))
abline(coef(fit1), col = "red", lty = "solid")
fit1 <- lm(Internet ~ GDP + HDI + GII + Fertility + CO2 + Homicide + Prison, data = UN)
summary(fit1)
# Residual plots
par(mfrow = c(1, 2))
plot(fit1)
# Scatterplot + (estimated) regression line
par(mfrow = c(1, 1))
with(UN, plot(GDP, Internet, pch = 19))
abline(coef(fit1), col = "red", lty = "solid")
# Scatterplot + (estimated) regression line
par(mfrow = c(1, 1))
with(UN, plot(GDP, Internet, pch = 19))
abline(coef(fit2), col = "red", lty = "solid")
text(13, 3, expression(time == hat(beta)[0] + hat(beta)[1] * GDP), col = "red")
points(UN$GDP, predict(fit1), col = "red", pch = 19, cex = 0.8)
# Scatterplot + (estimated) regression line
par(mfrow = c(1, 1))
with(UN, plot(GDP, Internet, pch = 19))
abline(coef(fit1), col = "red", lty = "solid")
# Scatterplot + (estimated) regression line
par(mfrow = c(1, 1))
with(UN, plot(GDP, Internet, pch = 19))
abline(fit1, col = "red", lty = "solid")
text(13, 3, expression(time == hat(beta)[0] + hat(beta)[1] * GDP), col = "red")
points(UN$GDP, predict(fit1), col = "red", pch = 19, cex = 0.8)
# Scatterplot + (estimated) regression line
par(mfrow = c(1, 1))
with(UN, plot(GDP, Internet, pch = 19))
abline(coef(fit1), col = "red", lty = "solid")
# Scatterplot + (estimated) regression line
par(mfrow = c(1, 1))
with(UN, plot(GDP, Internet, pch = 19))
abline(a = coef(fit1)[1], b = coef(fit1)[2], col = "red", lty = "solid")
text(13, 3, expression(time == hat(beta)[0] + hat(beta)[1] * GDP), col = "red")
points(UN$GDP, predict(fit1), col = "red", pch = 19, cex = 0.8)
# Scatterplot + (estimated) regression line
par(mfrow = c(1, 1))
with(UN, plot(GDP, Internet, pch = 19))
abline(coef(fit2), col = "red", lty = "solid")
text(13, 3, expression(time == hat(beta)[0] + hat(beta)[1] * GDP), col = "red")
points(UN$GDP, predict(fit2), col = "red", pch = 19, cex = 0.8)
# Scatterplot + (estimated) regression line
par(mfrow = c(1, 1))
with(UN, plot(Internet, pch = 19))
abline(a = coef(fit1)[1], b = coef(fit1)[2], col = "red", lty = "solid")
text(13, 3, expression(time == hat(beta)[0] + hat(beta)[1] * GDP), col = "red")
points(UN$GDP, predict(fit1), col = "red", pch = 19, cex = 0.8)
# Scatterplot + (estimated) regression line
par(mfrow = c(1, 1))
with(UN, plot(Internet9))
# Scatterplot + (estimated) regression line
par(mfrow = c(1, 1))
with(UN, plot(Internet))
abline(a = coef(fit1)[1], b = coef(fit1)[2], col = "red", lty = "solid")
text(13, 3, expression(time == hat(beta)[0] + hat(beta)[1] * GDP), col = "red")
points(UN$GDP, predict(fit1), col = "red", pch = 19, cex = 0.8)
# Scatterplot + (estimated) regression line
par(mfrow = c(1, 1))
with(UN, plot(Internet))
# Scatterplot + (estimated) regression line
par(mfrow = c(1, 1))
plot(fit1)
# Scatterplot + (estimated) regression line
par(mfrow = c(1, 2))
plot(fit1)
plot(fit2)
# Imposta il layout a 2 grafici affiancati
par(mfrow = c(1, 2))
# Numero totale di grafici diagnostici generati per ciascun modello
n_plots <- 4  # `plot.lm` genera 4 grafici diagnostici di default
# Genera i grafici accoppiati
for (i in 1:n_plots) {
# Plot del grafico diagnostico i-esimo per fit1
plot(fit1, which = i, main = paste("fit1 - Plot", i))
# Plot del grafico diagnostico i-esimo per fit2
plot(fit2, which = i, main = paste("fit2 - Plot", i))
}
# Imposta il layout a 2 grafici affiancati
par(mfrow = c(1, 2))
# Numero totale di grafici diagnostici generati per ciascun modello
n_plots <- 4  # `plot.lm` genera 4 grafici diagnostici di default
# Genera i grafici accoppiati
for (i in 1:n_plots) {
# Plot del grafico diagnostico i-esimo per fit1
plot(fit1, which = i, main = paste("multiple regression model"))
# Plot del grafico diagnostico i-esimo per fit2
plot(fit2, which = i, main = paste("bivariate model"))
}
par(mfrow = c(2, 2))
n_plots <- 2
# Genera i grafici accoppiati
for (i in 1:n_plots) {
# Plot del grafico diagnostico i-esimo per fit1
plot(fit1, which = i, main = paste("multiple regression model"))
# Plot del grafico diagnostico i-esimo per fit2
plot(fit2, which = i, main = paste("bivariate model"))
}
par(mfrow = c(2, 2))
n_plots <- 2
for (i in 1:n_plots) {
plot(fit1, which = i, main = paste("multiple regression model"), asp = 1)
plot(fit2, which = i, main = paste("bivariate model"), asp = 1)
}
par(mfrow = c(1, 2))
n_plots <- 2
for (i in 1:n_plots) {
plot(fit1, which = i, main = paste("multiple regression model"), asp = 1)
plot(fit2, which = i, main = paste("bivariate model"), asp = 1)
}
n_plots <- 2
for (i in 1:n_plots) {
par(mfrow = c(1, 2))
plot(fit1, which = i, main = paste("multiple regression model"), asp = 1)
plot(fit2, which = i, main = paste("bivariate model"), asp = 1)
}
n_plots <- 2
for (i in 1:n_plots) {
par(mfrow = c(1, 2))
plot(fit1, which = i, main = paste("multiple regression model"), asp = 1)
plot(fit2, which = i, main = paste("bivariate model"), asp = 1)
}
n_plots <- 2
par(mfrow = c(2, 2))
for (i in 1:n_plots) {
plot(fit1, which = i, main = paste("multiple regression model"), asp = 1)
plot(fit2, which = i, main = paste("bivariate model"), asp = 1)
}
n_plots <- 2
par(mfrow = c(2, 2))
for (i in 1:n_plots) {
plot(fit1, which = i, main = paste("multiple regression model"))
plot(fit2, which = i, main = paste("bivariate model"))
}
n_plots <- 2
par(mfrow = c(2, 2))
for (i in 1:n_plots) {
plot(fit1, which = i, main = paste("multiple regression model"))
plot(fit2, which = i, main = paste("bivariate model"))
}
fit1 <- lm(Internet ~ GDP + HDI + GII + Fertility + CO2 + Homicide + Prison, data = UN)
summary(fit1)
library(corrplot)
M = cor(UN[-1], use = "complete.obs")
corrplot(M, method = 'number')
n_plots <- 2
par(mfrow = c(2, 2))
for (i in 1:n_plots) {
plot(fit1, which = i, main = paste("multiple regression model"))
plot(fit2, which = i, main = paste("bivariate model"))
}
n_plots <- 2
par(mfrow = c(2, 2))
for (i in 1:n_plots) {
plot(fit1, which = i, main = paste("multiple regression model"), dir = 1)
plot(fit2, which = i, main = paste("bivariate model"), dir = 1)
}
n_plots <- 2
par(mfrow = c(2, 2))
for (i in 1:n_plots) {
plot(fit1, which = i, main = paste("multiple regression model"), asp = 1)
plot(fit2, which = i, main = paste("bivariate model"), asp = 1)
}
n_plots <- 2
par(mfrow = c(1, 4))
for (i in 1:n_plots) {
plot(fit1, which = i, main = paste("multiple regression model"), asp = 1)
plot(fit2, which = i, main = paste("bivariate model"), asp = 1)
}
n_plots <- 4
par(mfrow = c(2, 4))
for (i in 1:n_plots) {
plot(fit1, which = i, main = paste("multiple regression model"), asp = 1)
plot(fit2, which = i, main = paste("bivariate model"), asp = 1)
}
par(mfrow = c(1, 2))
plot(fit1, which = 1, main = paste("multiple regression model"), asp = 1)
plot(fit2, which = 1, main = paste("bivariate model"), asp = 1)
par(mfrow = c(1, 2))
plot(fit1, which = 2, main = paste("multiple regression model"), asp = 1)
plot(fit2, which = 2, main = paste("bivariate model"), asp = 1)
n_plots <- 4
par(mfrow = c(1, 2))
for (i in 1:n_plots) {
plot(fit1, which = i, main = paste("multiple regression model"))
plot(fit2, which = i, main = paste("bivariate model"))
}
n_plots <- 2
par(mfrow = c(1, 2))
for (i in 1:n_plots) {
plot(fit1, which = i, main = paste("multiple regression model"))
plot(fit2, which = i, main = paste("bivariate model"))
}
fit1 <- lm(Internet ~ GDP + HDI + GII + Fertility + CO2 + Homicide + Prison, data = UN)
summary(fit1)
fit2 <- lm(Internet ~ GDP, data = UN)
summary(fit2)
# Scatterplot + (estimated) regression line
par(mfrow = c(1, 1))
with(UN, plot(GDP, Internet, pch = 19))
abline(coef(fit2), col = "red", lty = "solid")
text(13, 3, expression(time == hat(beta)[0] + hat(beta)[1] * GDP), col = "red")
points(UN$GDP, predict(fit2), col = "red", pch = 19, cex = 0.8)
library(corrplot)
M = cor(UN[-1], use = "complete.obs")
corrplot(M, method = 'number')
n_plots <- 2
par(mfrow = c(1, 2))
for (i in 1:n_plots) {
plot(fit1, which = i, main = paste("multiple regression model"))
plot(fit2, which = i, main = paste("bivariate model"))
}
url <- "https://stat4ds.rwth-aachen.de/data/UN.dat"
UN <- read.table(url, header = TRUE)
summary(UN)
fit1 <- lm(Internet ~ GDP + HDI + GII + Fertility + CO2 + Homicide + Prison, data = UN)
summary(fit1)
fit2 <- lm(Internet ~ GDP, data = UN)
summary(fit2)
library(corrplot)
M = cor(UN[-1], use = "complete.obs")
corrplot(M, method = 'number')
n_plots <- 2
par(mfrow = c(1, 2))
for (i in 1:n_plots) {
plot(fit1, which = i, main = paste("multiple regression model"))
plot(fit2, which = i, main = paste("bivariate model"))
}
coeff_bivariate <- summary(fit2)$coefficients["GDP", ]
coeff_multiple <- summary(fit1)$coefficients["GDP", ]
coeff_bivariate <- summary(fit2)$coefficients["GDP", ]
coeff_multiple <- summary(fit1)$coefficients["GDP", ]
coeff_bivariate <- summary(fit2)$coefficients["GDP", ]
coeff_multiple <- summary(fit1)$coefficients["GDP", ]
print(coeff_bivariate)
print(coeff_multiple)
coeff_bivariate <- summary(fit2)$coefficients["GDP", ]
coeff_multiple <- summary(fit1)$coefficients["GDP", ]
cat("Coefficiente di GDP nel modello bivariato:\n")
print(coeff_bivariate)
cat("\nCoefficiente di GDP nel modello multiplo:\n")
print(coeff_multiple)
coeff_bivariate <- summary(fit2)$coefficients["GDP", ]
coeff_multiple <- summary(fit1)$coefficients["GDP", ]
cat("Coefficient of GDP in the bivariate model:\n")
print(coeff_bivariate)
cat("\nCoefficient of GDP in the multiple model:\n")
print(coeff_multiple)
coeff_bivariate <- summary(fit2)$coefficients["GDP", ]
coeff_multiple <- summary(fit1)$coefficients["GDP", ]
cat("Coefficient of GDP in the bivariate model:\n\n")
print(coeff_bivariate)
cat("\nCoefficient of GDP in the multiple model:\n\n")
print(coeff_multiple)
coeff_bivariate <- summary(fit2)$coefficients["GDP", ]
coeff_multiple <- summary(fit1)$coefficients["GDP", ]
cat("Coefficient of GDP in the bivariate regression model:\n\n")
print(coeff_bivariate)
cat("\nCoefficient of GDP in the multiple regression model:\n\n")
print(coeff_multiple)
coeff_bivariate <- summary(fit2)$coefficients["GDP", ]
coeff_multiple <- summary(fit1)$coefficients["GDP", ]
cat("**Coefficient of GDP in the bivariate regression model**:\n\n")
print(coeff_bivariate)
cat("\nCoefficient of GDP in the multiple regression model:\n\n")
print(coeff_multiple)
coeff_bivariate <- summary(fit2)$coefficients["GDP", ]
coeff_multiple <- summary(fit1)$coefficients["GDP", ]
cat("Coefficient of GDP in the bivariate regression model:\n\n")
print(coeff_bivariate)
cat("\nCoefficient of GDP in the multiple regression model:\n\n")
print(coeff_multiple)
coeff_bivariate <- summary(fit2)$coefficients["GDP", ]
coeff_multiple <- summary(fit1)$coefficients["GDP", ]
cat("\bCoefficient of GDP in the bivariate regression model:\n\n")
print(coeff_bivariate)
cat("\nCoefficient of GDP in the multiple regression model:\n\n")
print(coeff_multiple)
coeff_bivariate <- summary(fit2)$coefficients["GDP", ]
coeff_multiple <- summary(fit1)$coefficients["GDP", ]
cat("\bold Coefficient of GDP in the bivariate regression model:\n\n")
print(coeff_bivariate)
cat("\nCoefficient of GDP in the multiple regression model:\n\n")
print(coeff_multiple)
coeff_bivariate <- summary(fit2)$coefficients["GDP", ]
coeff_multiple <- summary(fit1)$coefficients["GDP", ]
cat("\b{cvbh} Coefficient of GDP in the bivariate regression model:\n\n")
print(coeff_bivariate)
cat("\nCoefficient of GDP in the multiple regression model:\n\n")
print(coeff_multiple)
coeff_bivariate <- summary(fit2)$coefficients["GDP", ]
coeff_multiple <- summary(fit1)$coefficients["GDP", ]
cat("Coefficient of GDP in the bivariate regression model:\n\n")
print(coeff_bivariate)
cat("\nCoefficient of GDP in the multiple regression model:\n\n")
print(coeff_multiple)
cat("Coefficient of GDP in the bivariate regression model:\n\n")
print(summary(fit2)$coefficients["GDP", ])
cat("\nCoefficient of GDP in the multiple regression model:\n\n")
print(summary(fit1)$coefficients["GDP", ])
coeff_bivariate <- summary(fit2)$coefficients["GDP", ]
coeff_multiple <- summary(fit1)$coefficients["GDP", ]
cat("Coefficient of GDP in the bivariate regression model:\n\n")
print(coeff_bivariate)
cat("\nCoefficient of GDP in the multiple regression model:\n\n")
print(coeff_multiple)
cat("Coefficient of GDP in the bivariate regression model:\n\n")
print(summary(fit2)$coefficients["GDP", ])
cat("\nCoefficient of GDP in the multiple regression model:\n\n")
print(summary(fit1)$coefficients["GDP", ])
library(corrplot)
M = cor(UN[-1], use = "complete.obs")
corrplot(M, method = 'color')
library(corrplot)
M = cor(UN[-1], use = "complete.obs")
corrplot(M, method = 'square')
library(corrplot)
M = cor(UN[-1], use = "complete.obs")
corrplot(M)
? corplot
? corrplot
library(corrplot)
M = cor(UN[-1], use = "complete.obs")
corrplot(M, method = 'square', type = 'upper')
corrplot(M, method = 'square', type = 'lower')
corrplot(M, method = 'shade', type = 'lower')
corrplot(M, method = 'pie', type = 'lower')
corrplot(M, method = 'ellipse', type = 'lower')
corrplot(M, method = 'shade', type = 'lower')
corrplot(M, method = 'shade', type = 'lower', diag = FALSE)
corrplot(M, method = 'shade', diag = FALSE)
library(corrplot)
M = cor(UN[-1], use = "complete.obs")
corrplot(M, method = 'shade', order = 'AOE')
library(corrplot)
M = cor(UN[-1], use = "complete.obs")
corrplot(M, method = 'shade', order = 'AOE', rect.lwd = 2)
library(corrplot)
M = cor(UN[-1], use = "complete.obs")
corrplot(M, method = 'shade')
library(corrplot)
M = cor(UN[-1], use = "complete.obs")
corrplot(M, method = 'color')
